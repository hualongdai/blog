{
  "html": "<p>深度遍历，可能在平常工作中不是很常用，也很简单，但是在平常工作中肯定碰不到直接完整让写深度遍历的场景，前两天碰到到一个这样的场景。</p>",
  "content": "深度遍历，可能在平常工作中不是很常用，也很简单，但是在平常工作中肯定碰不到直接完整让写深度遍历的场景，前两天碰到到一个这样的场景。",
  "custom_ranking": {
    "position": 0,
    "heading": 100
  },
  "draft": false,
  "categories": [
    "JS基础"
  ],
  "layout": "post",
  "comments": true,
  "title": "一道算法题",
  "tag": [
    "JS",
    "算法"
  ],
  "ext": ".md",
  "tags": [
    "JS",
    "算法"
  ],
  "date": 1516982400,
  "excerpt_html": "<p>深度遍历，可能在平常工作中不是很常用，也很简单，但是在平常工作中肯定碰不到直接完整让写深度遍历的场景，前两天碰到到一个这样的场景。</p>  <blockquote>   <p>案例背景，后端给了一个 tree 结构，需要前端自己遍历出，指定节点到根节点的路径</p> </blockquote>  <p>这个是利用深度遍历的思想来得到我们最终的目的数组。</p>  <h3 id=\"第一种方案\">第一种方案</h3>  <div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// mock 数据源</span>  <span class=\"kd\">const</span> <span class=\"nx\">demoData</span> <span class=\"o\">=</span> <span class=\"p\">[</span>   <span class=\"p\">{</span>     <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>     <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>     <span class=\"na\">children</span><span class=\"p\">:</span> <span class=\"p\">[</span>       <span class=\"p\">{</span>         <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>         <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>         <span class=\"na\">children</span><span class=\"p\">:</span> <span class=\"p\">[</span>           <span class=\"p\">{</span>             <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>             <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>             <span class=\"na\">children</span><span class=\"p\">:</span> <span class=\"p\">[</span>               <span class=\"p\">{</span>                 <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span>                 <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>                 <span class=\"na\">children</span><span class=\"p\">:</span> <span class=\"p\">[</span>                   <span class=\"p\">{</span>                     <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span>                     <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">6</span>                   <span class=\"p\">},</span>                   <span class=\"p\">{</span>                     <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span>                     <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">6</span>                   <span class=\"p\">}</span>                 <span class=\"p\">]</span>               <span class=\"p\">},</span>               <span class=\"p\">{</span>                 <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span>                 <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>                 <span class=\"na\">children</span><span class=\"p\">:</span> <span class=\"p\">[</span>                   <span class=\"p\">{</span>                     <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>                     <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">7</span>                   <span class=\"p\">}</span>                 <span class=\"p\">]</span>               <span class=\"p\">}</span>             <span class=\"p\">]</span>           <span class=\"p\">},</span>           <span class=\"p\">{</span>             <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>             <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">2</span>           <span class=\"p\">}</span>         <span class=\"p\">]</span>       <span class=\"p\">},</span>       <span class=\"p\">{</span>         <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>         <span class=\"na\">pId</span><span class=\"p\">:</span> <span class=\"mi\">1</span>       <span class=\"p\">}</span>     <span class=\"p\">]</span>   <span class=\"p\">}</span> <span class=\"p\">];</span> </code></pre></div></div>  <figure class=\"highlight\"><pre><code class=\"language-javascript\" data-lang=\"javascript\"><table class=\"rouge-table\"><tbody><tr><td class=\"gutter gl\"><pre class=\"lineno\">1<br data-jekyll-commonmark-ghpages=\"\" />2<br data-jekyll-commonmark-ghpages=\"\" />3<br data-jekyll-commonmark-ghpages=\"\" />4<br data-jekyll-commonmark-ghpages=\"\" />5<br data-jekyll-commonmark-ghpages=\"\" />6<br data-jekyll-commonmark-ghpages=\"\" />7<br data-jekyll-commonmark-ghpages=\"\" />8<br data-jekyll-commonmark-ghpages=\"\" />9<br data-jekyll-commonmark-ghpages=\"\" />10<br data-jekyll-commonmark-ghpages=\"\" />11<br data-jekyll-commonmark-ghpages=\"\" />12<br data-jekyll-commonmark-ghpages=\"\" />13<br data-jekyll-commonmark-ghpages=\"\" />14<br data-jekyll-commonmark-ghpages=\"\" />15<br data-jekyll-commonmark-ghpages=\"\" />16<br data-jekyll-commonmark-ghpages=\"\" />17<br data-jekyll-commonmark-ghpages=\"\" />18<br data-jekyll-commonmark-ghpages=\"\" />19<br data-jekyll-commonmark-ghpages=\"\" />20<br data-jekyll-commonmark-ghpages=\"\" />21<br data-jekyll-commonmark-ghpages=\"\" />22<br data-jekyll-commonmark-ghpages=\"\" />23<br data-jekyll-commonmark-ghpages=\"\" />24<br data-jekyll-commonmark-ghpages=\"\" />25<br data-jekyll-commonmark-ghpages=\"\" />26<br data-jekyll-commonmark-ghpages=\"\" /></pre></td><td class=\"code\"><pre><span class=\"c1\">// 由于是示例，没有做健壮性的判断，仅做参考</span><br data-jekyll-commonmark-ghpages=\"\" /><br data-jekyll-commonmark-ghpages=\"\" /><span class=\"kd\">const</span> <span class=\"nx\">deepTraverse</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"nx\">targetItem</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />  <span class=\"kd\">const</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"p\">[];</span><br data-jekyll-commonmark-ghpages=\"\" />  <span class=\"k\">try</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />    <span class=\"kd\">const</span> <span class=\"nx\">loop</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">)</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />      <span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">push</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">);</span><br data-jekyll-commonmark-ghpages=\"\" />      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">value</span> <span class=\"o\">===</span> <span class=\"nx\">targetItem</span><span class=\"p\">.</span><span class=\"nx\">value</span><span class=\"p\">)</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />        <span class=\"k\">throw</span> <span class=\"p\">(</span><span class=\"s1\">'找到了'</span><span class=\"p\">);</span> <span class=\"c1\">// 终止遍历</span><br data-jekyll-commonmark-ghpages=\"\" />      <span class=\"p\">}</span><br data-jekyll-commonmark-ghpages=\"\" />      <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">children</span><span class=\"p\">)</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />        <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">let</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nx\">len</span> <span class=\"o\">=</span> <span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">children</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">len</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">+=</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />          <span class=\"nx\">loop</span><span class=\"p\">(</span><span class=\"nx\">item</span><span class=\"p\">.</span><span class=\"nx\">children</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">])</span><br data-jekyll-commonmark-ghpages=\"\" />        <span class=\"p\">}</span><br data-jekyll-commonmark-ghpages=\"\" />        <span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">pop</span><span class=\"p\">()</span><br data-jekyll-commonmark-ghpages=\"\" />      <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />        <span class=\"nx\">result</span><span class=\"p\">.</span><span class=\"nx\">pop</span><span class=\"p\">()</span><br data-jekyll-commonmark-ghpages=\"\" />      <span class=\"p\">}</span><br data-jekyll-commonmark-ghpages=\"\" />    <span class=\"p\">};</span><br data-jekyll-commonmark-ghpages=\"\" />    <span class=\"nx\">loop</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">);</span><br data-jekyll-commonmark-ghpages=\"\" />  <span class=\"p\">}</span> <span class=\"k\">catch</span> <span class=\"p\">(</span><span class=\"nx\">e</span><span class=\"p\">)</span> <span class=\"p\">{</span><br data-jekyll-commonmark-ghpages=\"\" />    <span class=\"k\">return</span> <span class=\"nx\">result</span><span class=\"p\">;</span><br data-jekyll-commonmark-ghpages=\"\" />  <span class=\"p\">}</span><br data-jekyll-commonmark-ghpages=\"\" /><span class=\"p\">}</span><br data-jekyll-commonmark-ghpages=\"\" /><br data-jekyll-commonmark-ghpages=\"\" /><span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">deepTraverse</span><span class=\"p\">(</span><span class=\"nx\">demoData</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"p\">{</span> <span class=\"na\">value</span><span class=\"p\">:</span> <span class=\"mi\">10</span> <span class=\"p\">}))</span> <span class=\"c1\">// [1, 2, 4, 7, 10]</span></pre></td></tr></tbody></table></code></pre></figure>",
  "excerpt_text": "深度遍历，可能在平常工作中不是很常用，也很简单，但是在平常工作中肯定碰不到直接完整让写深度遍历的场景，前两天碰到到一个这样的场景。 案例背景，后端给了一个 tree 结构，需要前端自己遍历出，指定节点到根节点的路径 这个是利用深度遍历的思想来得到我们最终的目的数组。 第一种方案 // mock 数据源 const demoData = [ { value: 1, pId: \"\", children: [ { value: 2, pId: 1, children: [ { value: 4, pId: 2, children: [ { value: 6, pId: 4, children: [ { value: 8, pId: 6 }, { value: 9, pId: 6 } ] }, { value: 7, pId: 4, children: [ { value: 10, pId: 7 } ] } ] }, { value: 5, pId: 2 } ] }, { value: 3, pId: 1 } ] } ]; 1234567891011121314151617181920212223242526// 由于是示例，没有做健壮性的判断，仅做参考const deepTraverse = (data, targetItem) => { const result = []; try { const loop = (item) => { result.push(item.value); if (item.value === targetItem.value) { throw ('找到了'); // 终止遍历 } if (item.children) { for (let i = 0, len = item.children.length; i < len; i+= 1) { loop(item.children[i]) } result.pop() } else { result.pop() } }; loop(data); } catch (e) { return result; }}console.log(deepTraverse(demoData[0], { value: 10 })) // [1, 2, 4, 7, 10]",
  "slug": "遍历算法",
  "type": "post",
  "url": "/js%E5%9F%BA%E7%A1%80/2018/01/27/%E9%81%8D%E5%8E%86%E7%AE%97%E6%B3%95/",
  "objectID": "603a60fff5c3b2b4e61f5aec9b60e090"
}